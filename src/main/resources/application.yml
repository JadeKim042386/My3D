spring:
  profiles:
    active: local # default
    group:
      local:
        - common
        - security
        - mail
      prod1:
        - common
        - security
        - mail
        - prod
      prod2:
        - common
        - security
        - mail
        - prod
      test:
        - security
        - mail

---

spring:
  config.activate.on-profile: common
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    open-in-view: false
  thymeleaf3.decoupled-logic: true
jwt:
  token:
    cookie-name: ${JWT_COOKIE_NAME}
    secret-key: ${JWT_SECRET_KEY} # >= 256bits
    expired-time-ms: 2592000000
aws:
  bucketName: ${S3_BUCKET_NAME}
  s3:
    url: ${S3_URL}

---

spring:
  config.activate.on-profile: security
  security:
    oauth2:
      client:
        registration:
          kakao:
            # REST API 키
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            # 보안 > Client Secret 코드
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: POST
            scope:
              - "account_email"
              - "profile_nickname"
        provider:
          kakao:
            # https://developers.kakao.com/docs/latest/ko/kakaologin/rest-api#request-code
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            # https://developers.kakao.com/docs/latest/ko/kakaologin/rest-api#request-token
            token-uri: https://kauth.kakao.com/oauth/token
            # https://developers.kakao.com/docs/latest/ko/kakaologin/rest-api#req-user-info
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
nts.service-key: ${NTS_BUSINESS_KEY}

---

spring:
  config.activate.on-profile: mail
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true # 사용자 인증 시도 여부
          timeout: 5000
          starttls.enable: true # TLS 활성화 여부
admin.email: ${ADMIN_EMAIL}

---

spring:
  config.activate.on-profile: local
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
  devtools.livereload:
    enabled: true
    port: 35730

---

spring:
  config.activate.on-profile: prod
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
server.tomcat.use-relative-redirects: true

---

spring:
  config.activate.on-profile: prod1
server.port: 8080

---

spring:
  config.activate.on-profile: prod2
server.port: 8081

---

spring:
  config.activate.on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate.format_sql: true
    defer-datasource-initialization: true
    open-in-view: false
  sql.init.mode: always
nts.service-key: ${NTS_BUSINESS_KEY}
admin.email: "admin@gmail.com"
jwt:
  token:
    cookie-name: "token"
    secret-key: "aaaaagaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" # >= 256bits
    expired-time-ms: 2592000000
